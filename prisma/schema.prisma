// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  
  type              String
  provider          String
  providerAccountId String  @unique
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id               String     @id @default(cuid())
  name             String?
  spotifyAccountId String?    @unique
  image            String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  accounts         Account[]
  sharelist        Sharelist?
  friends          User[]     @relation("Friends")
  friendOf         User[]     @relation("Friends")
}

model Sharelist {
  id        String          @id @default(uuid())
  ownedBy   User            @relation(fields: [ownedById], references: [id])
  ownedById String          @unique
  
  songs     SharelistSong[] 
}

model SharelistSong {
  id                   String    @id @default(uuid())
  belongsToSharelist   Sharelist @relation(fields: [belongsToSharelistId], references: [id])
  belongsToSharelistId String
  song                 Song      @relation(fields: [songId], references: [id])
  songId               String
}

model Song {
  id                   String          @id @default(uuid())
  name                 String
  album                String
  cover                String
  artists              String
  spotifyTrackId       String          @unique
  sharelists           SharelistSong[]
}